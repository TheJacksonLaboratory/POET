/**
* Generated theme by Material Theme Generator
* https://materialtheme.arcsine.dev
*/
@use '@angular/material' as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.

// Fonts
@import 'https://fonts.googleapis.com/css?family=Material+Icons+Outlined';
@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500');

$fontConfig: (
  display-4: mat.define-typography-level(112px, 112px, 300, 'Roboto', -0.0134em),
  display-3: mat.define-typography-level(56px, 56px, 400, 'Roboto', -0.0089em),
  display-2: mat.define-typography-level(45px, 48px, 400, 'Roboto', 0.0000em),
  display-1: mat.define-typography-level(34px, 40px, 400, 'Roboto', 0.0074em),
  headline: mat.define-typography-level(24px, 32px, 400, 'Roboto', 0.0000em),
  title: mat.define-typography-level(20px, 32px, 500, 'Roboto', 0.0075em),
  subheading-2: mat.define-typography-level(16px, 28px, 400, 'Roboto', 0.0094em),
  subheading-1: mat.define-typography-level(15px, 24px, 500, 'Roboto', 0.0067em),
  body-2: mat.define-typography-level(14px, 24px, 500, 'Roboto', 0.0179em),
  body-1: mat.define-typography-level(14px, 20px, 400, 'Roboto', 0.0179em),
  button: mat.define-typography-level(14px, 14px, 500, 'Roboto', 0.0893em),
  caption: mat.define-typography-level(12px, 20px, 400, 'Roboto', 0.0333em),
  input: mat.define-typography-level(inherit, 1.125, 400, 'Roboto', 1.5px)
);

// Foreground Elements

// Light Theme Text
$dark-text: #000000;
$dark-primary-text: rgba($dark-text, 0.87);
$dark-accent-text: rgba(rgba(black, 0.87), 0.54);
$dark-disabled-text: rgba(rgba(black, 0.87), 0.38);
$dark-dividers: rgba(rgba(black, 0.87), 0.12);
$dark-focused: rgba(rgba(black, 0.87), 0.12);

mat.$light-theme-foreground-palette: (
  base:              black,
  divider:           rgba(black, 0.12),
  dividers:          rgba(black, 0.12),
  disabled:          rgba(black, 0.38),
  disabled-button:   rgba($dark-text, 0.26),
  disabled-text:     rgba(black, 0.38),
  elevation:         black,
  secondary-text:    $dark-accent-text,
  hint-text:         rgba(black, 0.38),
  accent-text:       $dark-accent-text,
  icon:              $dark-accent-text,
  icons:             $dark-accent-text,required
  text:              rgba(black, 0.87),
  slider-min:        rgba(black, 0.87),
  slider-off:        rgba($dark-text, 0.26),
  slider-off-active: rgba(black, 0.38),
);

// Dark Theme text
$light-text: #ffffff;
$light-primary-text: $light-text;
$light-accent-text: rgba(white, 0.7);
$light-disabled-text: rgba(white, 0.5);
$light-dividers: rgba(white, 0.12);
$light-focused: rgba(white, 0.12);

mat.$dark-theme-foreground-palette: (
  base:              $light-text,
  divider:           rgba(white, 0.12),
  dividers:          rgba(white, 0.12),
  disabled:          rgba(white, 0.5),
  disabled-button:   rgba($light-text, 0.3),
  disabled-text:     rgba(white, 0.5),
  elevation:         black,
  hint-text:         rgba(white, 0.5),
  secondary-text:    $light-accent-text,
  accent-text:       $light-accent-text,
  icon:              $light-text,
  icons:             $light-text,
  text:              $light-text,
  slider-min:        $light-text,
  slider-off:        rgba($light-text, 0.3),
  slider-off-active: rgba($light-text, 0.3),
);

// Background config
// Light bg
$light-background:    #fafafa;
$light-bg-darker-5:   darken($light-background, 5%);
$light-bg-darker-10:  darken($light-background, 10%);
$light-bg-darker-20:  darken($light-background, 20%);
$light-bg-darker-30:  darken($light-background, 30%);
$light-bg-lighter-5:  lighten($light-background, 5%);
$dark-bg-tooltip:     lighten(#2c2c2c, 20%);
$dark-bg-alpha-4:     rgba(#2c2c2c, 0.04);
$dark-bg-alpha-12:    rgba(#2c2c2c, 0.12);

mat.$light-theme-background-palette: (
  background:               $light-background,
  status-bar:               $light-bg-darker-20,
  app-bar:                  $light-bg-darker-5,
  hover:                    $dark-bg-alpha-4,
  card:                     $light-bg-lighter-5,
  dialog:                   $light-bg-lighter-5,
  tooltip:                  $dark-bg-tooltip,
  disabled-button:          $dark-bg-alpha-12,
  raised-button:            $light-bg-lighter-5,
  focused-button:           rgba(black, 0.12),
  selected-button:          $light-bg-darker-20,
  selected-disabled-button: $light-bg-darker-30,
  disabled-button-toggle:   $light-bg-darker-10,
  unselected-chip:          $light-bg-darker-10,
  disabled-list-option:     $light-bg-darker-10,
);

// Dark bg
$dark-background:     #2c2c2c;
$dark-bg-lighter-5:   lighten($dark-background, 5%);
$dark-bg-lighter-10:  lighten($dark-background, 10%);
$dark-bg-lighter-20:  lighten($dark-background, 20%);
$dark-bg-lighter-30:  lighten($dark-background, 30%);
$light-bg-alpha-4:    rgba(#fafafa, 0.04);
$light-bg-alpha-12:   rgba(#fafafa, 0.12);

// Background palette for dark themes.
mat.$dark-theme-background-palette: (
  background:               $dark-background,
  status-bar:               $dark-bg-lighter-20,
  app-bar:                  $dark-bg-lighter-5,
  hover:                    $light-bg-alpha-4,
  card:                     $dark-bg-lighter-5,
  dialog:                   $dark-bg-lighter-5,
  tooltip:                  $dark-bg-lighter-20,
  disabled-button:          $light-bg-alpha-12,
  raised-button:            $dark-bg-lighter-5,
  focused-button:           rgba(white, 0.12),
  selected-button:          $dark-bg-lighter-20,
  selected-disabled-button: $dark-bg-lighter-30,
  disabled-button-toggle:   $dark-bg-lighter-10,
  unselected-chip:          $dark-bg-lighter-20,
  disabled-list-option:     $dark-bg-lighter-10,
);

// Compute font config
@include mat.core($fontConfig);

// Theme Config

body {
  --primary-color: #296a7c;
  --primary-lighter-color: #bfd2d8;
  --primary-darker-color: #194d5f;
  --text-primary-color: #{white};
  --text-primary-lighter-color: #{rgba(black, 0.87)};
  --text-primary-darker-color: #{white};
}

$mat-primary: (
  main: #296a7c,
  lighter: #bfd2d8,
  darker: #194d5f,
  200: #296a7c, // For slide toggle,
  contrast : (
    main: white,
    lighter: rgba(black, 0.87),
    darker: white,
  )
);
$theme-primary: mat.define-palette($mat-primary, main, lighter, darker);

body {
  --accent-color: #8f7676;
  --accent-lighter-color: #ddd6d6;
  --accent-darker-color: #725959;
  --text-accent-color: #{white};
  --text-accent-lighter-color: #{rgba(black, 0.87)};
  --text-accent-darker-color: #{white};
}

$mat-accent: (
  main: #8f7676,
  lighter: #ddd6d6,
  darker: #725959,
  200: #8f7676, // For slide toggle,
  contrast : (
    main: white,
    lighter: rgba(black, 0.87),
    darker: white,
  )
);
$theme-accent: mat.define-palette($mat-accent, main, lighter, darker);

body {
  --warn-color: #ff761c;
  --warn-lighter-color: #ffd6bb;
  --warn-darker-color: #ff5911;
  --text-warn-color: #{rgba(black, 0.87)};
  --text-warn-lighter-color: #{rgba(black, 0.87)};
  --text-warn-darker-color: #{rgba(black, 0.87)};
}

$mat-warn: (
  main: #ff761c,
  lighter: #ffd6bb,
  darker: #ff5911,
  200: #ff761c, // For slide toggle,
  contrast : (
    main: rgba(black, 0.87),
    lighter: rgba(black, 0.87),
    darker: rgba(black, 0.87),
  )
);
$theme-warn: mat.define-palette($mat-warn, main, lighter, darker);

$theme: mat.define-dark-theme($theme-primary, $theme-accent, $theme-warn);
$altTheme: mat.define-light-theme($theme-primary, $theme-accent, $theme-warn);

// Theme Init
@include mat.all-component-themes($theme);

.theme-alternate {
  @include mat.all-component-themes($altTheme);
}

// Specific component overrides, pieces that are not in line with the general theming

// Handle buttons appropriately, with respect to line-height
.mat-raised-button, .mat-stroked-button, .mat-flat-button {
  padding: 0 1.15em;
  margin: 0 .65em;
  min-width: 3em;
  line-height: 36.4px;
  border-radius: 0 !important;
}

.mat-standard-chip {
  padding: .5em .85em;
  min-height: 2.5em;
}

.material-icons {
  font-size: 24px;
  font-family: 'Material Icons Outlined', 'Material Icons';
  .mat-badge-content {
    font-family: 'Quicksand';
  }
}

.mat-form-field.mat-focused {
  & .mat-form-field-ripple {
    background-color: #368BA2 !important;
  }

  & .mat-form-field-label {
    color: #368BA2 !important;
  }
}

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; width: 100%; box-sizing: border-box; }
body { margin: 0; font-family: Quicksand, "Helvetica Neue", sans-serif; }

.existing-curation .mat-form-field, .monarch-search-wrapper .mat-form-field {
  width: 90%;
}

.result-name {
  font-size: .75rem;
  text-transform: uppercase;
  max-width: 75%;
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  text-overflow: ellipsis;
  float: left;
}

.result-id {
  color: whitesmoke;
  font-size: .65rem;
}


.auto-complete-option {

  & .option-name {
    font-size: 14px;
    font-weight: bold;
  }

  & .option-id {
    font-size: 12px;
    color: #43b9da;
  }
}

.mat-ink-bar {
  background-color: #393939 !important;
}

.ngx-charts text { fill: #fff; }

.mat-option-text.mat-option-text {
  white-space: normal;
  line-height: 1.25rem;
  cursor: pointer;
}

// overrides.scss or styles.scss
// This fixes https://github.com/angular/components/issues/4609
.mat-dialog-override {
  mat-dialog-container {
    > :first-child {
      display: flex;
      flex-direction: column;
      height: 100%;
    }
    mat-dialog-content,
    div[mat-dialog-content] {
      flex-grow: 1;
      max-height: unset;
    }
  }
}

.mat-option-multiple .mat-option-text {
    color: white !important;
}

.search-wrapper .mat-form-field-label {
  text-align: center;
}

.spacer {
  flex: 1;
}

.left {
  float: left;
}

.right {
  float: right;
}

.remove-icon {
  cursor: pointer;
  padding: .25rem;
}


.form-card {
  box-shadow: none !important;
  background-color: #393939;
  margin-left: 5px;
  border: 1px solid gray;
  font-size: 11px;

  & .mat-card-title, .mat-card-subtitle {
    text-align: center;
  }

  & .mat-card-subtitle {
    margin-bottom: 0;
  }

  & .publication-list .mat-list-item {
    background-color: #2b3f4e;
    padding-top: 0;

    & .mat-list-icon {
      order: 10;
    }
  }

  & .mat-card-content, .mat-card-actions {
    min-width: 300px;
    margin: 0 auto 0 auto;
  }

  & .mat-card-actions {
    margin: .5rem auto .5rem auto !important;
    min-width: 300px;


    & .left-actions {
      display: inline-flex;

      & .mat-progress-spinner {
        margin-left: 1rem;
        margin-top: .5rem;
      }
    }

    & .right-actions {
      float: right;
      display: inline-flex;
    }
  }

  & .form-icon-left {
    float: left;

    &.lock {
      color: indianred;
      cursor: default;
    }

    &.unlock {
      color: lightgreen;
      cursor: default;
    }

    &.messages {
      margin-left: .5rem;
      color: gold;
      cursor: pointer;
      opacity: .6;
      &:hover {
        opacity: 1;
      }
    }
  }

  & .extra-information {
    font-size: 11px;
    margin-bottom: 0;
  }

  & .form-content-section {
    margin: .5rem 0 .5rem 0;

    & .treatment-form, .phenotype-form {
      width: 100%;
    }

    & .chebi-id {
      margin-right: .5rem;
    }
  }

  & .relation {
    margin-left: 1rem;
  }

  & .help-icon {
    cursor: pointer;
    float: right;
  }
}
.dash-card {
  & .mat-tab-label-active {
    background: #296a7c;
    color: white;
    opacity: 1;
  }

  & .mat-tab-body-wrapper {
    margin: 1.5rem;
  }
}

.page-title {
  padding: 1rem;
  margin-top: 1rem !important;
  background: #296b7c;
  color: whitesmoke;
  text-transform: uppercase;
  font-weight: bold !important;
}

.mat-tab-link.mat-tab-disabled {
  pointer-events: unset !important;
}

.capitalize, .mat-select-value-text {
  text-transform: capitalize;
}

.mat-option.statusApproved .mat-pseudo-checkbox-checked {
    background: forestgreen !important;
}

.mat-option.statusReview .mat-pseudo-checkbox-checked {
  background: gold !important;
}

.mat-option.statusNeedsWork .mat-pseudo-checkbox-checked {
  background: indianred !important;
}

.mat-icon.statusApproved {
  color: forestgreen !important;
}

.mat-icon.statusReview {
  color: gold !important;
}

.mat-icon.statusNeedsWork{
  color: indianred;
}

.mat-icon.statusHidden {
  color: #2c3e4c !important;
}

.approve-annotation {
  background: forestgreen;
}

.deny-annotation {
  background: indianred;
}

.edit-annotation {
  background: #296a7c;
  color: white;
}

.portal-curate {
  .mat-card-title {
    font-size: 18px;
    margin-bottom: 5px;
  }
}
.search {
  & .mat-form-field-infix {
    border-top: 0;
  }
}

.form-card {
    & .evidence.mat-form-field, .evidence .mat-form-field-infix {
      width: auto !important;
      & .mat-select-value {
        max-width: 100%;
        width: auto;
      }
    }
}

.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {
  color: #59c9e8;
}

.source-required {
  font-size: 12px;
  margin-left: .5rem;
  color: #ff4a4a;
}

.filter-container {
  & .mat-select-value-text, .mat-checkbox-label {
    font-size: 12px;
  }
}

.mat-card-actions .left-actions {
  & .mat-raised-button, .mat-stroked-button, .mat-flat-button, .mat-button {
    margin: 0 6px !important;
  }
}

a:not(.mat-tab-link, .mat-icon-button) {
  color: skyblue !important;
}

.mat-tabheader {
  a {
    color: unset;
  }
}
.mat-autocomplete-panel {
  background: #354555 !important;
}

.resources-tabs {
  & .mat-tab-header {
    background: #393939;
  }

  & .mat-ink-bar {
    background-color: whitesmoke !important;
  }

  & .mat-tab-body {
      padding: 2rem;
  }
}


