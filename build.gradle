plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
	id 'groovy'
	id "com.github.node-gradle.node" version "2.2.4"
	id "com.dorongold.task-tree" version "1.5"
	id 'jacoco'
}

group = 'org.monarchinitiative.poet'
version = '0.7.5-SNAPSHOT'
sourceCompatibility = '8'

repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'org.monarchinitiative.phenol', name: 'phenol-core', version: '1.6.1'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

	runtimeOnly 'com.h2database:h2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.4'
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '1.3-groovy-2.4'
}

def profile = 'development'

node {
	version = '12.0.0'
	npmVersion = '6.9.0'
	download = true
	nodeModulesDir = file("src/main/poet")

}

task buildClientProd(type: NpmTask, dependsOn: 'npmInstall') {
	group = 'build'
	description = 'Compile client side assets for production'
	args = ['run', 'buildProd']
}

task clientTest(type: NpmTask, dependsOn: 'npmInstall') {
	group = 'verification'
	description = 'Executes client side unit tests'
	args = ['run', 'test']
}

task shouldClientTest(){
	if(System.getProperty("clientTest")){
		dependsOn(clientTest)
	}
}

bootWar.dependsOn {
	buildClientProd
}

test.finalizedBy(jacocoTestReport)

task testApp {
	dependsOn(bootRun.dependsOn(buildClientProd))
}

clean {
	delete fileTree(dir: "src/main/resources/static")
}

bootRun {
	systemProperty "spring.profiles.active", profile
}